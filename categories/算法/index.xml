<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on vgmdj&#39;s blog</title>
    <link>https://blog.vgmdj.cn/categories/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on vgmdj&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>vgmdj</copyright>
    <lastBuildDate>Tue, 02 Oct 2018 15:23:50 +0000</lastBuildDate>
    
	<atom:link href="https://blog.vgmdj.cn/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>算法学习-二叉树遍历</title>
      <link>https://blog.vgmdj.cn/post/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</link>
      <pubDate>Tue, 02 Oct 2018 15:23:50 +0000</pubDate>
      
      <guid>https://blog.vgmdj.cn/post/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</guid>
      <description>&lt;h1 id=&#34;二叉树&#34;&gt;二叉树&lt;/h1&gt;

&lt;p&gt;回顾整理二叉树遍历相关内容。
对于二叉树而言，其遍历有两种方式，一种是深度优先，即先优先向下进行遍历，一种是广度优先，逐层向下遍历。&lt;/p&gt;

&lt;h1 id=&#34;源码地址&#34;&gt;源码地址&lt;/h1&gt;

&lt;p&gt;实现语言为 Golang
&lt;a href=&#34;https://github.com/vgmdj/go_practice/tree/master/algorithm/tree_traversal&#34;&gt;https://github.com/vgmdj/go_practice/tree/master/algorithm/tree_traversal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法学习-排序</title>
      <link>https://blog.vgmdj.cn/post/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sat, 18 Mar 2017 16:23:50 +0000</pubDate>
      
      <guid>https://blog.vgmdj.cn/post/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E6%8E%92%E5%BA%8F/</guid>
      <description>&lt;h2 id=&#34;总述&#34;&gt;总述&lt;/h2&gt;

&lt;p&gt;算法的排序，一方面作为其他算法的基础，一方面也体现了一些重要的算法的思想，需要我们好好掌握。
排序是根据某种标准将一组记录重排的过程，是最常见的计算任务之一。&lt;/p&gt;

&lt;p&gt;设有一个序列{a1, a2, a3,&amp;hellip; an},对于序列中任意两个元素ai,aj，若i&lt;j,ai&gt;aj，则说明ai和aj是一对逆序对。
实际上，排序过程就是调整记录的初始序列中逆序对的过程。
本章代码的go语言实现都可见于： &lt;a href=&#34;https://github.com/vgmdj/go_practice/tree/master/algorithm/sort&#34;&gt;https://github.com/vgmdj/go_practice/tree/master/algorithm/sort&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法学习-总览</title>
      <link>https://blog.vgmdj.cn/post/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E6%80%BB%E8%A7%88/</link>
      <pubDate>Sat, 04 Mar 2017 16:23:50 +0000</pubDate>
      
      <guid>https://blog.vgmdj.cn/post/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0-%E6%80%BB%E8%A7%88/</guid>
      <description>&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;算法是程序员实力体现的一部分，在日常工作中，不停寻求最优算法，应该是程序员的基本修奍了
下面先做一些总结，留着以后复习使用&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>